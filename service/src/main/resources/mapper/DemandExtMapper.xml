<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmpay.lemon.monitor.dao.IDemandExtDao">

    <resultMap id="BaseResultMap" type="com.cmpay.lemon.monitor.entity.DemandDO">
        <result property="reqInnerSeq" jdbcType="VARCHAR" column="req_inner_seq" />
        <result property="reqPrdLine" jdbcType="VARCHAR" column="req_prd_line" />
        <result property="reqType" jdbcType="VARCHAR" column="req_type" />
        <result property="reqSts" jdbcType="VARCHAR" column="req_sts" />
        <result property="reqNo" jdbcType="VARCHAR" column="req_no" />
        <result property="reqNm" jdbcType="VARCHAR" column="req_nm" />
        <result property="reqDesc" jdbcType="VARCHAR" column="req_desc" />
        <result property="inputRes" jdbcType="INTEGER" column="input_res" />
        <result property="devCycle" jdbcType="INTEGER" column="dev_cycle" />
        <result property="expInput" jdbcType="DOUBLE" column="exp_input" />
        <result property="prdFinshTm" jdbcType="VARCHAR" column="prd_finsh_tm" />
        <result property="actPrdFinshTm" jdbcType="VARCHAR" column="act_prd_finsh_tm" />
        <result property="preCurPeriod" jdbcType="VARCHAR" column="pre_cur_period" />
        <result property="curMonTarget" jdbcType="VARCHAR" column="cur_mon_target" />
        <result property="expPrdReleaseTm" jdbcType="VARCHAR" column="exp_prd_release_tm" />
        <result property="devpLeadDept" jdbcType="VARCHAR" column="devp_lead_dept" />
        <result property="devpCoorDept" jdbcType="VARCHAR" column="devp_coor_dept" />
        <result property="reqProDept" jdbcType="VARCHAR" column="req_pro_dept" />
        <result property="reqProposer" jdbcType="VARCHAR" column="req_proposer" />
        <result property="reqMnger" jdbcType="VARCHAR" column="req_mnger" />
        <result property="reqStartMon" jdbcType="VARCHAR" column="req_start_mon" />
        <result property="reqImplMon" jdbcType="VARCHAR" column="req_impl_mon" />
        <result property="projectMng" jdbcType="VARCHAR" column="project_mng" />
        <result property="productMng" jdbcType="VARCHAR" column="product_mng" />
        <result property="isCut" jdbcType="VARCHAR" column="is_cut" />
        <result property="preMonPeriod" jdbcType="VARCHAR" column="pre_mon_period" />
        <result property="qaMng" jdbcType="VARCHAR" column="qa_mng" />
        <result property="configMng" jdbcType="VARCHAR" column="config_mng" />
        <result property="monRemark" jdbcType="VARCHAR" column="mon_remark" />
        <result property="devpEng" jdbcType="VARCHAR" column="devp_eng" />
        <result property="frontEng" jdbcType="VARCHAR" column="front_eng" />
        <result property="testEng" jdbcType="VARCHAR" column="test_eng" />
        <result property="uatUpdateTm" jdbcType="VARCHAR" column="uat_update_tm" />
        <result property="actUatUpdateTm" jdbcType="VARCHAR" column="act_uat_update_tm" />
        <result property="preTm" jdbcType="VARCHAR" column="pre_tm" />
        <result property="testFinshTm" jdbcType="VARCHAR" column="test_finsh_tm" />
        <result property="actTestFinshTm" jdbcType="VARCHAR" column="act_test_finsh_tm" />
        <result property="riskSolution" jdbcType="VARCHAR" column="risk_solution" />
        <result property="riskFeedbackTm" jdbcType="VARCHAR" column="risk_feedback_tm" />
        <result property="endMonRemark" jdbcType="VARCHAR" column="end_mon_remark" />
        <result property="endFeedbackTm" jdbcType="VARCHAR" column="end_feedback_tm" />
        <result property="leadDeptPro" jdbcType="VARCHAR" column="lead_dept_pro" />
        <result property="coorDeptPro" jdbcType="VARCHAR" column="coor_dept_pro" />
        <result property="leadDeptWorkload" jdbcType="VARCHAR" column="lead_dept_workload" />
        <result property="coorDeptWorkload" jdbcType="VARCHAR" column="coor_dept_workload" />
        <result property="totalWorkload" jdbcType="DOUBLE" column="total_workload" />
        <result property="inputWorkload" jdbcType="DOUBLE" column="input_workload" />
        <result property="lastInputWorkload" jdbcType="DOUBLE" column="last_input_workload" />
        <result property="remainWorkload" jdbcType="DOUBLE" column="remain_workload" />
        <result property="monInputWorkload" jdbcType="DOUBLE" column="mon_input_workload" />
        <result property="isSvnBuild" jdbcType="VARCHAR" column="is_svn_build" />
        <result property="reqAbnorType" jdbcType="VARCHAR" column="req_abnor_type" />
        <result property="creatTime" jdbcType="TIMESTAMP" column="creat_time" />
        <result property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
        <result property="creatUser" jdbcType="VARCHAR" column="creat_user" />
        <result property="updateUser" jdbcType="VARCHAR" column="update_user" />
        <result property="monRemark" jdbcType="VARCHAR" column="mon_remark" />
        <result property="devpResMng" jdbcType="VARCHAR" column="devp_res_mng" />
        <result property="proId" jdbcType="VARCHAR" column="pro_id" />
        <result property="projectStartTm" jdbcType="VARCHAR" column="project_start_tm" />
        <result property="actPrdUploadTm" jdbcType="VARCHAR" column="act_prd_upload_tm" />
        <result property="actWorkloadUploadTm" jdbcType="VARCHAR" column="act_workload_upload_tm" />
        <result property="actSitUploadTm" jdbcType="VARCHAR" column="act_sit_upload_tm" />
        <result property="actTestCasesUploadTm" jdbcType="VARCHAR" column="act_test_cases_upload_tm" />
        <result property="actUatUploadTm" jdbcType="VARCHAR" column="act_uat_upload_tm" />
        <result property="actPreUploadTm" jdbcType="VARCHAR" column="act_pre_upload_tm" />
        <result property="actProductionUploadTm" jdbcType="VARCHAR" column="act_production_upload_tm" />
        <result property="projectedWorkload" jdbcType="INTEGER" column="projectedWorkload" />
        <result property="stateCauseClassification" jdbcType="VARCHAR" column="state_cause_classification" />
        <result property="targetCauseClassification" jdbcType="VARCHAR" column="target_cause_classification" />
        <result property="productionTime" jdbcType="INTEGER" column="production_time" />
    </resultMap>

    <sql id="Base_Column_List" >
        req_inner_seq ,
		req_prd_line ,
		req_type ,
		req_sts ,
		req_no ,
		req_nm ,
		req_desc ,
		input_res ,
		dev_cycle ,
		exp_input ,
		prd_finsh_tm ,
		act_prd_finsh_tm ,
		pre_cur_period ,
		cur_mon_target ,
		exp_prd_release_tm ,
		devp_lead_dept,
		devp_coor_dept,
		req_pro_dept,
		req_proposer,
		req_mnger,
		devp_res_mng ,
		req_start_mon ,
		req_impl_mon ,
		project_mng ,
		product_mng ,
		is_cut ,
		pre_mon_period ,
		qa_mng ,
		config_mng ,
		mon_remark ,
		devp_eng ,
		front_eng ,
		test_eng ,
		uat_update_tm ,
		act_uat_update_tm ,
		pre_tm ,
		test_finsh_tm ,
		act_test_finsh_tm ,
		risk_solution ,
		risk_feedback_tm ,
		end_mon_remark ,
		end_feedback_tm ,
		total_workload ,
		lead_dept_pro ,
		coor_dept_pro ,
		lead_dept_workload ,
		coor_dept_workload ,
		input_workload ,
		last_input_workload ,
		remain_workload ,
		mon_input_workload ,
		is_svn_build,
		req_abnor_type,
		creat_time ,
		update_time ,
		creat_user ,
		update_user,
		projectedWorkload,
		state_cause_classification,
		target_cause_classification,
		production_time
    </sql>

    <sql id="Base_Column_List1">
		req_inner_seq,
		req_nm,
		req_no,
		devp_lead_dept,
		devp_coor_dept,
		project_mng,
		devp_eng,
		front_eng,
		product_mng,
		input_res,
		dev_cycle,
		exp_input,
		test_eng,
		config_mng,
		prd_finsh_tm,
		uat_update_tm,
		test_finsh_tm,
		pre_tm,
		exp_prd_release_tm,
		update_time,
		update_user,
		pre_cur_period,
		req_sts,
		cur_mon_target,
		req_prd_line,
		devp_res_mng,
		is_svn_build,
		req_abnor_type,
		projectedWorkload,
		state_cause_classification,
		target_cause_classification,
		production_time
	</sql>

    <update id="updateReqPlanJsp" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
		UPDATE t_demand_info
		SET
		req_inner_seq = #{reqInnerSeq}
		,devp_lead_dept =#{devpLeadDept}
		,devp_coor_dept =#{ devpCoorDept }
		,project_mng =#{ projectMng }
		,devp_eng =#{ devpEng }
		,front_eng =#{ frontEng }
		,product_mng =#{ productMng }
		,test_eng =#{ testEng }
		,config_mng=#{configMng}
		,prd_finsh_tm =#{ prdFinshTm }
		,uat_update_tm =#{ uatUpdateTm }
		,test_finsh_tm =#{ testFinshTm }
		,pre_tm=#{preTm}
		,production_time=#{productionTime}
		,devp_res_mng =#{ devpResMng}
		,req_sts =#{reqSts}
		,update_time =#{ updateTime }
		,update_user =#{ updateUser }
		 ,exp_input =#{expInput }
		WHERE req_inner_seq = #{reqInnerSeq}
	</update>

    <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        (SELECT firstLevelOrganization FROM t_organization_structure t WHERE t.secondLevelOrganization = devp_lead_dept) AS firstLevelOrganization,
        (CASE WHEN (SELECT pic_name FROM t_demand_picture t
        where t.pic_reqInnerSeq = req_inner_seq
        ) IS NOT NULL THEN '是' ELSE '否' END) AS isApprovalProcess,
        <include refid="Base_Column_List" />
        from t_demand_info
        where req_inner_seq=#{reqInnerSeq}
    </select>

    <delete id="delete" parameterType="java.lang.String" >
        delete from t_demand_info
        where req_inner_seq=#{reqInnerSeq}
    </delete>

    <insert id="insert" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        insert into t_demand_info(
        req_inner_seq ,
        req_prd_line ,
        req_type ,
        req_sts ,
        req_no ,
        req_nm ,
        req_desc ,
        input_res ,
        dev_cycle ,
        exp_input ,
        prd_finsh_tm ,
        act_prd_finsh_tm ,
        pre_cur_period ,
        cur_mon_target ,
        exp_prd_release_tm ,
        devp_lead_dept ,
        devp_coor_dept ,
        req_pro_dept ,
        req_proposer ,
        req_mnger ,
        devp_res_mng ,
        req_start_mon ,
        req_impl_mon ,
        project_mng ,
        product_mng ,
        is_cut ,
        pre_mon_period ,
        qa_mng ,
        config_mng ,
        mon_remark ,
        devp_eng ,
        front_eng ,
        test_eng ,
        uat_update_tm ,
        act_uat_update_tm ,
        pre_tm ,
        test_finsh_tm ,
        act_test_finsh_tm ,
        risk_solution ,
        risk_feedback_tm ,
        end_mon_remark ,
        end_feedback_tm ,
        total_workload ,
        lead_dept_pro ,
        coor_dept_pro ,
        lead_dept_workload ,
        coor_dept_workload ,
        input_workload ,
        last_input_workload ,
        remain_workload ,
        mon_input_workload ,
        is_svn_build,
        req_abnor_type,
        creat_time ,
        update_time ,
        creat_user ,
        projectedWorkload,
        state_cause_classification,
		target_cause_classification,
		production_time,
        update_user)
        values(
        #{reqInnerSeq },
        #{reqPrdLine },
        #{reqType },
        #{reqSts },
        #{reqNo },
        #{reqNm },
        #{reqDesc },
        #{inputRes },
        #{devCycle },
        #{expInput },
        #{prdFinshTm },
        #{actPrdFinshTm },
        #{preCurPeriod },
        #{curMonTarget },
        #{expPrdReleaseTm },
        #{devpLeadDept },
        #{devpCoorDept },
        #{reqProDept },
        #{reqProposer },
        #{reqMnger },
        #{devpResMng },
        #{reqStartMon },
        #{reqImplMon },
        #{projectMng },
        #{productMng },
        #{isCut },
        #{preMonPeriod },
        #{qaMng },
        #{configMng },
        #{monRemark },
        #{devpEng },
        #{frontEng },
        #{testEng },
        #{uatUpdateTm },
        #{actUatUpdateTm },
        #{preTm },
        #{testFinshTm },
        #{actTestFinshTm},
        #{riskSolution },
        #{riskFeedbackTm },
        #{endMonRemark },
        #{endFeedbackTm },
        #{totalWorkload },
        #{leadDeptPro },
        #{coorDeptPro },
        #{leadDeptWorkload },
        #{coorDeptWorkload },
        #{inputWorkload },
        #{lastInputWorkload },
        #{remainWorkload },
        #{monInputWorkload },
        #{isSvnBuild },
        #{reqAbnorType },
        #{creatTime },
        #{updateTime },
        #{creatUser},
        #{projectedWorkload},
        #{stateCauseClassification},
        #{targetCauseClassification},
        #{productionTime},
        #{updateUser})

    </insert>
    <update id="updateReqSts" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        update t_demand_info set req_sts =#{reqSts } ,state_cause_classification =#{stateCauseClassification } where req_inner_seq =#{reqInnerSeq }
    </update>
    <!--逻辑删除-->
    <update id="logicDelete" parameterType="java.lang.String" >
        update t_demand_info set req_sts = '60'  where req_inner_seq =#{reqInnerSeq}
    </update>


    <update id="update" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        update t_demand_info
        set
        req_inner_seq =#{reqInnerSeq }
        <if test="reqPrdLine != null and reqPrdLine != ''">
            ,req_prd_line =#{reqPrdLine }
        </if>
        <if test="reqType != null and reqType != ''">
            ,req_type =#{reqType }
        </if>
        <if test="reqSts != null and reqSts != ''">
            ,req_sts =#{reqSts }
        </if>
        <if test="reqNo != null and reqNo != ''">
            ,req_no =#{reqNo }
        </if>
        <if test="reqNm != null and reqNm != ''">
            ,req_nm =#{reqNm }
        </if>
        <if test="reqDesc != null and reqDesc != ''">
            ,req_desc =#{reqDesc }
        </if>
        <if test="inputRes != null">
            ,input_res =#{inputRes }
        </if>
        <if test="devCycle != null">
            ,dev_cycle =#{devCycle }
        </if>
        <if test="expInput != null">
            ,exp_input =#{expInput }
        </if>
        <if test="prdFinshTm != null and prdFinshTm != ''">
            ,prd_finsh_tm =#{prdFinshTm }
        </if>
        <if test="actPrdFinshTm != null and actPrdFinshTm != ''">
            ,act_prd_finsh_tm =#{actPrdFinshTm }
        </if>
        <if test="preCurPeriod != null and preCurPeriod != ''">
            ,pre_cur_period =#{preCurPeriod }
        </if>
        <if test="curMonTarget != null and curMonTarget != ''">
            ,cur_mon_target =#{curMonTarget }
        </if>
        <if test="expPrdReleaseTm != null and expPrdReleaseTm != ''">
            ,exp_prd_release_tm =#{expPrdReleaseTm }
        </if>
        <if test="devpLeadDept != null and devpLeadDept != ''">
            ,devp_lead_dept =#{devpLeadDept }
        </if>
        <if test="reqProDept != null and reqProDept != ''">
            ,req_pro_dept =#{reqProDept }
        </if>
        <if test="reqProposer != null and reqProposer != ''">
            ,req_proposer =#{reqProposer }
        </if>
        <if test="reqMnger != null and reqMnger != ''">
            ,req_mnger =#{reqMnger }
        </if>
        <if test="devpResMng != null and devpResMng != ''">
            ,devp_res_mng =#{devpResMng }
        </if>
        <if test="reqStartMon != null and reqStartMon != ''">
            ,req_start_mon =#{reqStartMon }
        </if>
        <if test="reqImplMon != null and reqImplMon != ''">
            ,req_impl_mon =#{reqImplMon }
        </if>
        <if test="projectMng != null and projectMng != ''">
            ,project_mng =#{projectMng }
        </if>
        <if test="productMng != null and productMng != ''">
            ,product_mng =#{productMng }
        </if>
        <if test="isCut != null and isCut != ''">
            ,is_cut =#{isCut }
        </if>
        <if test="preMonPeriod != null and preMonPeriod != ''">
            ,pre_mon_period =#{preMonPeriod }
        </if>
        <if test="qaMng != null and qaMng != ''">
            ,qa_mng =#{qaMng }
        </if>
        <if test="configMng != null and configMng != ''">
            ,config_mng =#{configMng }
        </if>
        <if test="monRemark != null">
            ,mon_remark =#{monRemark }
        </if>
        <if test="devpEng != null and devpEng != ''">
            ,devp_eng =#{devpEng }
        </if>
        <if test="frontEng != null and frontEng != ''">
            ,front_eng =#{frontEng }
        </if>
        <if test="testEng != null and testEng != ''">
            ,test_eng =#{testEng }
        </if>
        <if test="uatUpdateTm != null and uatUpdateTm != ''">
            ,uat_update_tm =#{uatUpdateTm }
        </if>
        <if test="actUatUpdateTm != null and actUatUpdateTm != ''">
            ,act_uat_update_tm =#{actUatUpdateTm }
        </if>
        <if test="preTm != null and preTm != ''">
            ,pre_tm =#{preTm }
        </if>
        <if test="testFinshTm != null and testFinshTm != ''">
            ,test_finsh_tm =#{testFinshTm }
        </if>
        <if test="actTestFinshTm != null and actTestFinshTm != ''">
            ,act_test_finsh_tm =#{actTestFinshTm }
        </if>
        <if test="riskSolution != null and riskSolution != ''">
            ,risk_solution =#{riskSolution }
        </if>
        <if test="riskFeedbackTm != null and riskFeedbackTm != ''">
            ,risk_feedback_tm =#{riskFeedbackTm }
        </if>
        <if test="endMonRemark != null">
            ,end_mon_remark =#{endMonRemark }
        </if>
        <if test="endFeedbackTm != null and endFeedbackTm != ''">
            ,end_feedback_tm =#{endFeedbackTm }
        </if>
        <if test="totalWorkload != null">
            ,total_workload =#{totalWorkload }
        </if>
        <if test="leadDeptPro != null and leadDeptPro != ''">
            ,lead_dept_pro =#{leadDeptPro }
        </if>
        <if test="coorDeptPro != null and coorDeptPro != ''">
            ,coor_dept_pro =#{coorDeptPro }
        </if>
        <if test="leadDeptWorkload != null and leadDeptWorkload != ''">
            ,lead_dept_workload =#{leadDeptWorkload }
        </if>
        <if test="coorDeptWorkload != null and coorDeptWorkload != ''">
            ,coor_dept_workload =#{coorDeptWorkload }
        </if>
        <if test="inputWorkload != null">
            ,input_workload =#{inputWorkload }
        </if>
        <if test="lastInputWorkload != null">
            ,last_input_workload =#{lastInputWorkload }
        </if>
        <if test="remainWorkload != null">
            ,remain_workload =#{remainWorkload }
        </if>
        <if test="monInputWorkload != null">
            ,mon_input_workload =#{monInputWorkload }
        </if>
        <if test="isSvnBuild != null and isSvnBuild != ''">
            ,is_svn_build=#{isSvnBuild }
        </if>
        <if test="reqAbnorType != null and reqAbnorType != ''">
            ,req_abnor_type=#{reqAbnorType }
        </if>
        <if test="creatTime != null">
            ,creat_time =#{creatTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateTime != null">
            ,update_time =#{updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="creatUser != null and creatUser != ''">
            ,creat_user =#{creatUser}
        </if>
        <if test="updateUser != null and updateUser != ''">
            ,update_user =#{updateUser}
        </if>
        <if test="projectedWorkload != null">
            ,projectedWorkload =#{projectedWorkload }
        </if>
        <if test="devpCoorDept != null">
            ,devp_coor_dept =#{devpCoorDept}
        </if>
        <if test="stateCauseClassification != null and stateCauseClassification != ''">
            ,state_cause_classification =#{stateCauseClassification}
        </if>
        <if test="targetCauseClassification != null">
            ,target_cause_classification =#{targetCauseClassification}
        </if>
        <if test="productionTime != null and productionTime != ''">
            ,production_time =#{productionTime}
        </if>
        where req_inner_seq =#{reqInnerSeq }
    </update>

    <select id="find" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        SELECT
        (SELECT firstLevelOrganization FROM t_organization_structure t WHERE t.secondLevelOrganization = devp_lead_dept) AS firstLevelOrganization,
        (CASE WHEN (SELECT pic_name FROM t_demand_picture t
        <where>
            t.pic_reqInnerSeq = req_inner_seq
            <if test="reqImplMon != null and reqImplMon != ''">
                AND t.pic_moth =#{reqImplMon}
            </if>
        </where>
        ) IS NOT NULL THEN '是' ELSE '否' END) AS isApprovalProcess,
        <include refid="Base_Column_List" />
        FROM t_demand_info a
        <where>
            req_sts not in ('60')
            <if test="isMonthSer != null and isMonthSer != ''">
                AND -a.pre_cur_period > -a.cur_mon_target
            </if>
            <if test="reqNm != null and reqNm != ''">
                AND a.req_nm LIKE CONCAT('%',#{reqNm},'%')
            </if>
            <if test="reqNo != null and reqNo != ''">
                AND a.req_no LIKE CONCAT('%',#{reqNo},'%')
            </if>
            <if test="reqType != null and reqType != ''">
                AND a.req_type = #{reqType}
            </if>
            <if test="preCurPeriod != null and preCurPeriod != ''">
                AND a.pre_cur_period = #{preCurPeriod}
            </if>
            <if test="reqStartMon != null and reqStartMon != ''">
                AND a.req_start_mon = #{reqStartMon}
            </if>
            <if test="devpLeadDept != '主导部门为空' and devpLeadDept != null and devpLeadDept != ''">
                AND a.devp_lead_dept = #{devpLeadDept}
            </if>
            <if test="devpLeadDept == '主导部门为空'">
                AND a.devp_lead_dept = ''
            </if>
            <if test="devpCoorDept != null and devpCoorDept != ''">
                AND a.devp_coor_dept LIKE CONCAT('%',#{devpCoorDept},'%')
            </if>
            <if test="reqImplMon != null and reqImplMon != ''">
                AND a.req_impl_mon = #{reqImplMon}
            </if>
            <if test="reqPrdLine !=null and reqPrdLine != ''">
                AND a.req_prd_line = #{reqPrdLine}
            </if>
            <if test="reqMnger !=null and reqMnger != ''">
                AND a.req_mnger LIKE CONCAT('%',#{reqMnger},'%')
            </if>
            <if test="projectMng != null and projectMng != ''">
                AND a.project_mng LIKE CONCAT('%',#{projectMng},'%')
            </if>
            <if test="productMng != null and productMng != ''">
                AND a.product_mng LIKE CONCAT('%',#{productMng},'%')
            </if>
            <if test="isSvnBuild != null and isSvnBuild != ''">
                AND a.is_svn_build = #{isSvnBuild}
            </if>
            <if test="reqSts !=null and reqSts != ''">
                AND a.req_sts = #{reqSts}
            </if>
            <if test="reqAbnorType !=null  and reqAbnorType != '' and reqAbnorType eq '01'">
            AND NOT ( ( (a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND 30 > pre_cur_period )
            OR (a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period )
            OR (a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period ) )
            AND req_sts not in ('30','40','60')
            AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
            OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type NOT LIKE '%01%' ) )
        </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '02'">
                AND( ( (a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND 30 > pre_cur_period )
                OR (a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period )
                OR (a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period ) )
                AND req_sts not in ('30','40','60')
                AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type NOT LIKE '%01%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '03'">
                AND ( a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')   AND 30 > pre_cur_period
                AND req_sts not in ('30','40','60') AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%03%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '04'">
                AND ( a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period
                AND req_sts not in ('30','40','60')  AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%04%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '05'">
                AND ( a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period
                AND req_sts not in ('30','40','60')  AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%05%' ) )
            </if>
            <if test="endMonRemark eq '01'">
                AND (a.end_mon_remark is NULL OR trim(a.end_mon_remark) = '')
            </if>
            <if test="endMonRemark eq '02'">
                AND a.end_mon_remark is NOT NULL AND trim(a.end_mon_remark) != ''
            </if>
            <if test="firstLevelOrganization !=null and firstLevelOrganization != ''">
                AND  a.devp_lead_dept in  ( SELECT secondLevelOrganization FROM t_organization_structure  where firstLevelOrganization = #{firstLevelOrganization}   )
            </if>
            <if test="isApprovalProcess !=null and isApprovalProcess != '' and isApprovalProcess == '是'.toString()">
                AND  a.req_inner_seq in  ( SELECT pic_reqInnerSeq FROM t_demand_picture )
            </if>
            <if test="isApprovalProcess !=null and isApprovalProcess != '' and isApprovalProcess == '否'.toString()">
                AND  a.req_inner_seq not in  ( SELECT pic_reqInnerSeq FROM t_demand_picture )
            </if>
        </where>
        ORDER BY a.req_inner_seq desc
    </select>


    <select id="getNormalExecutionDemand" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        SELECT
        <include refid="Base_Column_List" />
        FROM t_demand_info a
        <where>
            req_sts not in ('30','40','60')
            and  req_abnor_type ='01'
            <if test="isMonthSer != null and isMonthSer != ''">
                AND -a.pre_cur_period > -a.cur_mon_target
            </if>
            <if test="reqNm != null and reqNm != ''">
                AND a.req_nm LIKE CONCAT('%',#{reqNm},'%')
            </if>
            <if test="reqNo != null and reqNo != ''">
                AND a.req_no LIKE CONCAT('%',#{reqNo},'%')
            </if>
            <if test="reqType != null and reqType != ''">
                AND a.req_type = #{reqType}
            </if>
            <if test="preCurPeriod != null and preCurPeriod != ''">
                AND a.pre_cur_period = #{preCurPeriod}
            </if>
            <if test="reqStartMon != null and reqStartMon != ''">
                AND a.req_start_mon = #{reqStartMon}
            </if>
            <if test="devpLeadDept != null and devpLeadDept != ''">
                AND a.devp_lead_dept = #{devpLeadDept}
            </if>
            <if test="devpCoorDept != null and devpCoorDept != ''">
                AND a.devp_coor_dept LIKE CONCAT('%',#{devpCoorDept},'%')
            </if>
            <if test="reqImplMon != null and reqImplMon != ''">
                AND a.req_impl_mon = #{reqImplMon}
            </if>
            <if test="reqPrdLine !=null and reqPrdLine != ''">
                AND a.req_prd_line = #{reqPrdLine}
            </if>
            <if test="reqMnger !=null and reqMnger != ''">
                AND a.req_mnger LIKE CONCAT('%',#{reqMnger},'%')
            </if>
            <if test="projectMng != null and projectMng != ''">
                AND a.project_mng = #{projectMng}
            </if>
            <if test="productMng != null and productMng != ''">
                AND a.product_mng = #{productMng}
            </if>
            <if test="isSvnBuild != null and isSvnBuild != ''">
                AND a.is_svn_build = #{isSvnBuild}
            </if>
            <if test="reqSts !=null and reqSts != ''">
                AND a.req_sts = #{reqSts}
            </if>
        </where>
        ORDER BY a.req_inner_seq desc
    </select>

    <select id="getReqTaskByUK" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        SELECT
        a.req_nm,a.req_no
        FROM t_demand_info a
        <where>
            req_sts not in ('60')
            <if test="reqImplMon != null and reqImplMon != ''">
                AND a.req_impl_mon =#{reqImplMon}
            </if>
            <if test="reqNm != null and reqNm != ''">
                AND a.req_nm =#{reqNm}
            </if>
            <if test="reqNo != null and reqNo != ''">
                OR a.req_no = #{reqNo}
            </if>
        </where>
        group by a.req_nm,a.req_no
    </select>

    <select id="getReqTaskByNo" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        SELECT
        <include refid="Base_Column_List" />
        FROM t_demand_info a
        <where>
            req_sts not in ('60')
            <if test="reqImplMon != null and reqImplMon != ''">
                AND a.req_impl_mon =#{reqImplMon}
            </if>
            <if test="reqNo != null and reqNo != ''">
                AND a.req_no = #{reqNo}
            </if>
        </where>
        ORDER BY a.req_inner_seq desc
    </select>

    <select id="getReqTaskByUKImpl" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        SELECT
        a.req_inner_seq,a.req_nm,a.req_no,req_impl_mon
        FROM t_demand_info a
        where	req_sts not in ('60')
        and	(
        <if test="reqNm != null and reqNm != ''">
            a.req_nm =#{reqNm}
        </if>
        <if test="reqNo != null and reqNo != ''">
            OR a.req_no = #{reqNo}
        </if>
        )
        <if test="reqImplMon != null and reqImplMon != ''">
            AND a.req_impl_mon =#{reqImplMon}
        </if>
        group by a.req_nm,a.req_no,req_impl_mon
    </select>

    <select id="getMaxInnerSeq" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        select
        max(req_inner_seq) as req_inner_seq from t_demand_info
    </select>

    <select id="getReqTask" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        SELECT
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME = req_prd_line AND t.DIC_ID='PRD_LINE') AS req_prd_line,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME = req_type AND t.DIC_ID='REQ_TASK_TYPE') AS req_type,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME = req_sts AND t.DIC_ID='REQ_STS') AS req_sts,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME = pre_cur_period AND t.DIC_ID='REQ_PEROID') AS pre_cur_period,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME = cur_mon_target AND t.DIC_ID='REQ_PEROID') AS cur_mon_target,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME = pre_mon_period AND t.DIC_ID='REQ_PEROID') AS pre_mon_period,
        (SELECT firstLevelOrganization FROM t_organization_structure t WHERE t.secondLevelOrganization = devp_lead_dept) AS firstLevelOrganization,
        (CASE WHEN (SELECT pic_name FROM t_demand_picture t
        <where>
            t.pic_reqInnerSeq = req_inner_seq
            <if test="reqImplMon != null and reqImplMon != ''">
                AND t.pic_moth =#{reqImplMon}
            </if>
        </where>
        ) IS NOT NULL THEN '是' ELSE '否' END) AS isApprovalProcess,
        <include refid="Base_Column_List" />
        FROM t_demand_info a
        <where>
            req_sts not in ('60')
            <if test="reqNm != null and reqNm != ''">
                AND a.req_nm LIKE CONCAT('%',#{reqNm},'%')
            </if>
            <if test="reqNo != null and reqNo != ''">
                AND a.req_no LIKE CONCAT('%',#{reqNo},'%')
            </if>
            <if test="reqType != null and reqType != ''">
                AND a.req_type = #{reqType}
            </if>
            <if test="preCurPeriod != null and preCurPeriod != ''">
                AND a.pre_cur_period = #{preCurPeriod}
            </if>
            <if test="reqStartMon != null and reqStartMon != ''">
                AND a.req_start_mon = #{reqStartMon}
            </if>
            <if test="devpLeadDept != null and devpLeadDept != ''">
                AND a.devp_lead_dept = #{devpLeadDept}
            </if>
            <if test="devpCoorDept != null and devpCoorDept != ''">
                AND a.devp_coor_dept LIKE CONCAT('%',#{devpCoorDept},'%')
            </if>
            <if test="reqImplMon != null and reqImplMon != ''">
                AND a.req_impl_mon = #{reqImplMon}
            </if>
            <if test="reqPrdLine !=null and reqPrdLine != ''">
                AND a.req_prd_line = #{reqPrdLine}
            </if>
            <if test="reqMnger !=null and reqMnger != ''">
                AND a.req_mnger LIKE CONCAT('%',#{reqMnger},'%')
            </if>
            <if test="projectMng != null and projectMng != ''">
                AND a.project_mng = #{projectMng}
            </if>
            <if test="productMng != null and productMng != ''">
                AND a.product_mng = #{productMng}
            </if>
            <if test="isSvnBuild != null and isSvnBuild != ''">
                AND a.is_svn_build = #{isSvnBuild}
            </if>
            <if test="reqSts !=null and reqSts != ''">
                AND a.req_sts = #{reqSts}
            </if>
            <if test="reqAbnorType !=null  and reqAbnorType != '' and reqAbnorType eq '01'">
                AND NOT ( ( (a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND 30 > pre_cur_period )
                OR (a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period )
                OR (a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period ) )
                AND req_sts not in ('30','40','60')
                AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type NOT LIKE '%01%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '02'">
                AND( ( (a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND 30 > pre_cur_period )
                OR (a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period )
                OR (a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period ) )
                AND req_sts not in ('30','40','60')
                AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type NOT LIKE '%01%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '03'">
                AND ( a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')   AND 30 > pre_cur_period
                AND req_sts not in ('30','40','60') AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%03%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '04'">
                AND ( a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period
                AND req_sts not in ('30','40','60')  AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%04%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '05'">
                AND ( a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period
                AND req_sts not in ('30','40','60')  AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%05%' ) )
            </if>
            <if test="endMonRemark eq '01'">
                AND (a.end_mon_remark is NULL OR trim(a.end_mon_remark) = '')
            </if>
            <if test="endMonRemark eq '02'">
                AND a.end_mon_remark is NOT NULL AND trim(a.end_mon_remark) != ''
            </if>
            <if test="firstLevelOrganization !=null and firstLevelOrganization != ''">
               AND  a.devp_lead_dept in  ( SELECT secondLevelOrganization FROM t_organization_structure  where firstLevelOrganization = #{firstLevelOrganization}   )
            </if>
        </where>
        ORDER BY a.req_inner_seq asc
    </select>

    <select id="getReqPlan" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        SELECT
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        req_prd_line AND
        t.DIC_ID='PRD_LINE') AS req_prd_line,
        (SELECT VALUE FROM
        t_permi_dic_data t WHERE t.NAME = req_sts AND
        t.DIC_ID='REQ_STS') AS req_sts,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        pre_cur_period AND
        t.DIC_ID='REQ_PEROID') AS pre_cur_period,
        (SELECT
        VALUE FROM t_permi_dic_data t WHERE t.NAME = cur_mon_target AND
        t.DIC_ID='REQ_PEROID') AS cur_mon_target,
        (SELECT firstLevelOrganization FROM t_organization_structure t WHERE t.secondLevelOrganization = devp_lead_dept) AS firstLevelOrganization,
        (CASE WHEN (SELECT pic_name FROM t_demand_picture t
        <where>
            t.pic_reqInnerSeq = req_inner_seq
            <if test="reqImplMon != null and reqImplMon != ''">
                AND t.pic_moth =#{reqImplMon}
            </if>

        </where>
        ) IS NOT NULL THEN '是' ELSE '否' END) AS isApprovalProcess,
        <include refid="Base_Column_List1" />
        FROM t_demand_info a
        <where>
            req_sts not in ('60')
            <if test="reqNm != null and reqNm != ''">
                AND a.req_nm LIKE CONCAT('%',#{reqNm},'%')
            </if>
            <if test="reqNo != null and reqNo != ''">
                AND a.req_no LIKE CONCAT('%',#{reqNo},'%')
            </if>
            <if test="reqType != null and reqType != ''">
                AND a.req_type = #{reqType}
            </if>
            <if test="preCurPeriod != null and preCurPeriod != ''">
                AND a.pre_cur_period = #{preCurPeriod}
            </if>
            <if test="reqStartMon != null and reqStartMon != ''">
                AND a.req_start_mon = #{reqStartMon}
            </if>
            <if test="devpLeadDept != null and devpLeadDept != ''">
                AND a.devp_lead_dept = #{devpLeadDept}
            </if>
            <if test="devpCoorDept != null and devpCoorDept != ''">
                AND a.devp_coor_dept LIKE CONCAT('%',#{devpCoorDept},'%')
            </if>
            <if test="reqImplMon != null and reqImplMon != ''">
                AND a.req_impl_mon = #{reqImplMon}
            </if>
            <if test="reqPrdLine !=null and reqPrdLine != ''">
                AND a.req_prd_line = #{reqPrdLine}
            </if>
            <if test="reqMnger !=null and reqMnger != ''">
                AND a.req_mnger LIKE CONCAT('%',#{reqMnger},'%')
            </if>
            <if test="projectMng != null and projectMng != ''">
                AND a.project_mng = #{projectMng}
            </if>
            <if test="productMng != null and productMng != ''">
                AND a.product_mng = #{productMng}
            </if>
            <if test="isSvnBuild != null and isSvnBuild != ''">
                AND a.is_svn_build = #{isSvnBuild}
            </if>
            <if test="reqSts !=null and reqSts != ''">
                AND a.req_sts = #{reqSts}
            </if>
            <if test="reqAbnorType !=null  and reqAbnorType != '' and reqAbnorType eq '01'">
                AND NOT ( ( (a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND 30 > pre_cur_period )
                OR (a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period )
                OR (a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period ) )
                AND req_sts not in ('30','40','60')
                AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type NOT LIKE '%01%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '02'">
                AND( ( (a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND 30 > pre_cur_period )
                OR (a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period )
                OR (a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period ) )
                AND req_sts not in ('30','40','60')
                AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type NOT LIKE '%01%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '03'">
                AND ( a.prd_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')   AND 30 > pre_cur_period
                AND req_sts not in ('30','40','60') AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%03%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '04'">
                AND ( a.uat_update_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 30 AND  120 > pre_cur_period
                AND req_sts not in ('30','40','60')  AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%04%' ) )
            </if>
            <if test="reqAbnorType !=null and reqAbnorType != '' and reqAbnorType eq '05'">
                AND ( a.test_finsh_tm &lt; date_format(SYSDATE(),'%Y-%m-%d')  AND pre_cur_period >= 120 AND  140 > pre_cur_period
                AND req_sts not in ('30','40','60')  AND(ISNULL(prd_finsh_tm)=0) AND  (LENGTH(trim(prd_finsh_tm))>0) AND(ISNULL(uat_update_tm)=0) AND  (LENGTH(trim(uat_update_tm))>0)AND(ISNULL(test_finsh_tm)=0) AND  (LENGTH(trim(test_finsh_tm))>0) AND(ISNULL(pre_cur_period)=0) AND  (LENGTH(trim(pre_cur_period))>0)
                OR( ( (ISNULL(prd_finsh_tm)=1) OR (LENGTH(trim(prd_finsh_tm))&lt;1) OR (ISNULL(uat_update_tm)=1) OR  (LENGTH(trim(uat_update_tm))&lt;1) OR (ISNULL(test_finsh_tm)=1) OR (LENGTH(trim(test_finsh_tm))&lt;1) OR(ISNULL(pre_cur_period)=1) OR (LENGTH(trim(pre_cur_period))&lt;1)) AND req_abnor_type LIKE '%05%' ) )
            </if>
            <if test="endMonRemark eq '01'">
                AND (a.end_mon_remark is NULL OR trim(a.end_mon_remark) = '')
            </if>
            <if test="endMonRemark eq '02'">
                AND a.end_mon_remark is NOT NULL AND trim(a.end_mon_remark) != ''
            </if>
        </where>
        ORDER BY a.req_inner_seq asc
    </select>

    <select id="findUnFinishReq" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        select
        (CASE WHEN (SELECT pic_name FROM t_demand_picture t
        <where>
            t.pic_reqInnerSeq = req_inner_seq and t.pic_moth =#{reqImplMon}
        </where>
        ) IS NOT NULL THEN '是' ELSE '否' END) AS isApprovalProcess,
        <include refid="Base_Column_List" />
        from t_demand_info
        where req_impl_mon=#{reqImplMon}
        and pre_cur_period != '180'
        and req_sts not in ('30','40','50','60');
    </select>

    <select id="findUnFinishReq1" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        select
        (CASE WHEN (SELECT pic_name FROM t_demand_picture t
        <where>
            t.pic_reqInnerSeq = req_inner_seq and t.pic_moth =#{reqImplMon}
        </where>
        ) IS NOT NULL THEN '是' ELSE '否' END) AS isApprovalProcess,
        <include refid="Base_Column_List" />
        from t_demand_info
        where req_impl_mon=#{reqImplMon}
        and req_sts='50' and remain_workload > mon_input_workload
    </select>


    <insert id="insertStockReq" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
		insert into t_demand_info(
		req_inner_seq ,
		req_prd_line ,
		req_type ,
		req_sts ,
		req_no ,
		req_nm ,
		req_desc ,
		input_res ,
		dev_cycle ,
		exp_input ,
		prd_finsh_tm ,
		act_prd_finsh_tm ,
		pre_cur_period ,
		cur_mon_target ,
		exp_prd_release_tm ,
		devp_lead_dept ,
		devp_coor_dept ,
		req_pro_dept ,
		req_proposer ,
		req_mnger ,
		devp_res_mng ,
		req_start_mon ,
		req_impl_mon ,
		project_mng ,
		product_mng ,
		is_cut ,
		pre_mon_period ,
		qa_mng ,
		config_mng ,
		mon_remark ,
		devp_eng ,
		front_eng ,
		test_eng ,
		uat_update_tm ,
		act_uat_update_tm ,
		pre_tm ,
		test_finsh_tm ,
		act_test_finsh_tm ,
		risk_solution ,
		risk_feedback_tm ,
		end_mon_remark ,
		end_feedback_tm ,
		total_workload ,
		lead_dept_pro ,
		coor_dept_pro ,
		lead_dept_workload ,
		coor_dept_workload ,
		input_workload ,
		last_input_workload ,
		remain_workload ,
		mon_input_workload ,
		is_svn_build,
		req_abnor_type,
		creat_time ,
		update_time ,
		creat_user ,
		state_cause_classification,
		target_cause_classification,
		production_time,
		update_user)
		values(
		#{reqInnerSeq },
		#{reqPrdLine },
		#{reqType },
		#{reqSts },
		#{reqNo },
		#{reqNm },
		#{reqDesc },
		#{inputRes },
		#{devCycle },
		#{expInput },
		#{prdFinshTm },
		#{actPrdFinshTm },
		#{preCurPeriod },
		#{curMonTarget },
		#{expPrdReleaseTm },
		#{devpLeadDept },
		#{devpCoorDept },
		#{reqProDept },
		#{reqProposer },
		#{reqMnger },
		#{devpResMng },
		#{reqStartMon },
		#{reqImplMon },
		#{projectMng },
		#{productMng },
		#{isCut },
		#{preMonPeriod },
		#{qaMng },
		#{configMng },
		#{monRemark },
		#{devpEng },
		#{frontEng },
		#{testEng },
		#{uatUpdateTm },
		#{actUatUpdateTm },
		#{preTm },
		#{testFinshTm },
		#{actTestFinshTm },
		#{riskSolution },
		#{riskFeedbackTm },
		#{endMonRemark },
		#{endFeedbackTm },
		#{totalWorkload },
		#{leadDeptPro },
		#{coorDeptPro },
		#{leadDeptWorkload },
		#{coorDeptWorkload },
		#{inputWorkload },
		#{lastInputWorkload },
		#{remainWorkload },
		#{monInputWorkload },
		#{isSvnBuild },
		#{reqAbnorType },
		#{creatTime },
		#{updateTime },
		#{creatUser},
		#{stateCauseClassification},
        #{targetCauseClassification},
        #{productionTime},
		#{updateUser})
	</insert>

    <update id="updateStockReq" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        update t_demand_info
        set
        req_inner_seq =#{reqInnerSeq }
        <if test="reqPrdLine != null and reqPrdLine != ''">
            ,req_prd_line =#{reqPrdLine }
        </if>
        <if test="reqType != null and reqType != ''">
            ,req_type =#{reqType }
        </if>
        <if test="reqSts != null and reqSts != ''">
            ,req_sts =#{reqSts }
        </if>
        <if test="reqNo != null and reqNo != ''">
            ,req_no =#{reqNo }
        </if>
        <if test="reqNm != null and reqNm != ''">
            ,req_nm =#{reqNm }
        </if>
        <if test="reqDesc != null and reqDesc != ''">
            ,req_desc =#{reqDesc }
        </if>
        <if test="inputRes != null">
            ,input_res =#{inputRes }
        </if>
        <if test="devCycle != null">
            ,dev_cycle =#{devCycle }
        </if>
        <if test="expInput != null">
            ,exp_input =#{expInput }
        </if>
        <if test="prdFinshTm != null and prdFinshTm != ''">
            ,prd_finsh_tm =#{prdFinshTm }
        </if>
        <if test="actPrdFinshTm != null and actPrdFinshTm != ''">
            ,act_prd_finsh_tm =#{actPrdFinshTm }
        </if>
        <if test="preCurPeriod != null and preCurPeriod != ''">
            ,pre_cur_period =#{preCurPeriod }
        </if>
        <if test="curMonTarget != null and curMonTarget != ''">
            ,cur_mon_target =#{curMonTarget }
        </if>
        <if test="expPrdReleaseTm != null and expPrdReleaseTm != ''">
            ,exp_prd_release_tm =#{expPrdReleaseTm }
        </if>
        <if test="devpLeadDept != null and devpLeadDept != ''">
            ,devp_lead_dept =#{devpLeadDept }
        </if>
        <if test="devpCoorDept != null and devpCoorDept != ''">
            ,devp_coor_dept =#{devpCoorDept }
        </if>
        <if test="reqProDept != null and reqProDept != ''">
            ,req_pro_dept =#{reqProDept }
        </if>
        <if test="reqProposer != null and reqProposer != ''">
            ,req_proposer =#{reqProposer }
        </if>
        <if test="reqMnger != null and reqMnger != ''">
            ,req_mnger =#{reqMnger }
        </if>
        <if test="devpResMng != null and devpResMng != ''">
            ,devp_res_mng =#{devpResMng }
        </if>
        <if test="reqStartMon != null and reqStartMon != ''">
            ,req_start_mon =#{reqStartMon }
        </if>
        <if test="reqImplMon != null and reqImplMon != ''">
            ,req_impl_mon =#{reqImplMon }
        </if>
        <if test="projectMng != null and projectMng != ''">
            ,project_mng =#{projectMng }
        </if>
        <if test="productMng != null and productMng != ''">
            ,product_mng =#{productMng }
        </if>
        <if test="isCut != null and isCut != ''">
            ,is_cut =#{isCut }
        </if>
        <if test="preMonPeriod != null and preMonPeriod != ''">
            ,pre_mon_period =#{preMonPeriod }
        </if>
        <if test="qaMng != null and qaMng != ''">
            ,qa_mng =#{qaMng }
        </if>
        <if test="configMng != null and configMng != ''">
            ,config_mng =#{configMng }
        </if>
        <if test="monRemark != null and monRemark != ''">
            ,mon_remark =#{monRemark }
        </if>
        <if test="devpEng != null and devpEng != ''">
            ,devp_eng =#{devpEng }
        </if>
        <if test="frontEng != null and frontEng != ''">
            ,front_eng =#{frontEng }
        </if>
        <if test="testEng != null and testEng != ''">
            ,test_eng =#{testEng }
        </if>
        <if test="uatUpdateTm != null and uatUpdateTm != ''">
            ,uat_update_tm =#{uatUpdateTm }
        </if>
        <if test="actUatUpdateTm != null and actUatUpdateTm != ''">
            ,act_uat_update_tm =#{actUatUpdateTm }
        </if>
        <if test="preTm != null and preTm != ''">
            ,pre_tm =#{preTm }
        </if>
        <if test="testFinshTm != null and testFinshTm != ''">
            ,test_finsh_tm =#{testFinshTm }
        </if>
        <if test="actTestFinshTm != null and actTestFinshTm != ''">
            ,act_test_finsh_tm =#{actTestFinshTm }
        </if>
        <if test="riskSolution != null and riskSolution != ''">
            ,risk_solution =#{riskSolution }
        </if>
        <if test="riskFeedbackTm != null and riskFeedbackTm != ''">
            ,risk_feedback_tm =#{riskFeedbackTm }
        </if>
        <if test="endMonRemark != null and endMonRemark != ''">
            ,end_mon_remark =#{endMonRemark }
        </if>
        <if test="endFeedbackTm != null and endFeedbackTm != ''">
            ,end_feedback_tm =#{endFeedbackTm }
        </if>
        <if test="totalWorkload != null">
            ,total_workload =#{totalWorkload }
        </if>
        <if test="leadDeptPro != null and leadDeptPro != ''">
            ,lead_dept_pro =#{leadDeptPro }
        </if>
        <if test="coorDeptPro != null and coorDeptPro != ''">
            ,coor_dept_pro =#{coorDeptPro }
        </if>
        <if test="leadDeptWorkload != null and leadDeptWorkload != ''">
            ,lead_dept_workload =#{leadDeptWorkload }
        </if>
        <if test="coorDeptWorkload != null and coorDeptWorkload != ''">
            ,coor_dept_workload =#{coorDeptWorkload }
        </if>
        <if test="inputWorkload != null">
            ,input_workload =#{inputWorkload }
        </if>
        <if test="lastInputWorkload != null">
            ,last_input_workload =#{lastInputWorkload }
        </if>
        <if test="remainWorkload != null">
            ,remain_workload =#{remainWorkload }
        </if>
        <if test="monInputWorkload != null">
            ,mon_input_workload =#{monInputWorkload }
        </if>
        <if test="isSvnBuild != null and isSvnBuild != ''">
            ,is_svn_build=#{isSvnBuild }
        </if>
        <if test="reqAbnorType != null and reqAbnorType != ''">
            ,req_abnor_type=#{reqAbnorType }
        </if>
        <if test="creatTime != null">
            ,creat_time =#{creatTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateTime != null">
            ,update_time =#{updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="creatUser != null and creatUser != ''">
            ,creat_user =#{creatUser}
        </if>
        <if test="updateUser != null and updateUser != ''">
            ,update_user =#{updateUser}
        </if>
        <if test="stateCauseClassification != null and stateCauseClassification != ''">
            ,state_cause_classification =#{stateCauseClassification}
        </if>
        <if test="targetCauseClassification != null and targetCauseClassification != ''">
            ,target_cause_classification =#{targetCauseClassification}
        </if>
        <if test="productionTime != null and productionTime != ''">
            ,production_time =#{productionTime}
        </if>
        where req_inner_seq =#{reqInnerSeq }
    </update>
    <update id="updateExtraTm" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        UPDATE t_demand_extra
        SET
        req_nm  = #{reqNm}
        <if test="reqNo != null and reqNo != ''">
            ,req_no = #{reqNo}
        </if>
        <if test="projectStartTm != null and projectStartTm != ''">
            ,project_start_tm = #{projectStartTm}
        </if>
        <if test="actPrdUploadTm != null and actPrdUploadTm != ''">
            ,act_prd_upload_tm = #{actPrdUploadTm}
        </if>
        <if test="actWorkloadUploadTm != null and actWorkloadUploadTm != ''">
            ,act_workload_upload_tm = #{actWorkloadUploadTm}
        </if>
        <if test="actSitUploadTm != null and actSitUploadTm != ''">
            ,act_sit_upload_tm = #{actSitUploadTm}
        </if>
        <if test="actTestCasesUploadTm != null and actTestCasesUploadTm != ''">
            ,act_test_cases_upload_tm = #{actTestCasesUploadTm}
        </if>
        <if test="actUatUploadTm != null and actUatUploadTm != ''">
            ,act_uat_upload_tm = #{actUatUploadTm}
        </if>
        <if test="actPreUploadTm != null and actPreUploadTm != ''">
            ,act_pre_upload_tm = #{actPreUploadTm}
        </if>
        <if test="actProductionUploadTm != null and actProductionUploadTm != ''">
            ,act_production_upload_tm= #{actProductionUploadTm}
        </if>
        where pro_id = #{proId}
    </update>
    <insert id="insertExtraTm" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
		INSERT into t_demand_extra(
		req_no,
		req_nm,
		project_start_tm,
		act_prd_upload_tm,
		act_workload_upload_tm,
		act_sit_upload_tm,
		act_test_cases_upload_tm,
		act_uat_upload_tm,
		act_pre_upload_tm,
		act_production_upload_tm
		) VALUES(
		#{reqNo},
		#{reqNm},
		#{projectStartTm},
		#{actPrdUploadTm},
		#{actWorkloadUploadTm},
		#{actSitUploadTm},
		#{actTestCasesUploadTm},
		#{actUatUploadTm},
		#{actPreUploadTm},
		#{actProductionUploadTm}
		)
	</insert>
    <select id="getExtraTm" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        SELECT
        pro_id,req_nm,req_no,
        project_start_tm,
        act_prd_upload_tm,
        act_workload_upload_tm,
        act_sit_upload_tm,
        act_test_cases_upload_tm,
        act_uat_upload_tm,
        act_pre_upload_tm,
        act_production_upload_tm
        FROM t_demand_extra
        <where>
            <if test="reqNm != null and reqNm != ''">
                and req_nm  = #{reqNm}
            </if>
            <if test="reqNo != null and reqNo != ''">
                or req_no = #{reqNo}
            </if>
        </where>
    </select>
    <update id="updatePreCurPeriod" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        UPDATE t_demand_info
        SET
        <if test="preCurPeriod != null and preCurPeriod != ''">
            pre_cur_period =#{preCurPeriod}
        </if>
        <if test="reqSts == '10' or reqSts == '20' or reqSts == '30' or reqSts == '40' or reqSts == '50'">
            ,req_sts =#{reqSts}
        </if>
        WHERE req_inner_seq = #{reqInnerSeq}
    </update>

    <select id="getPrdFnishAbnor" resultMap="BaseResultMap">
        select
        datediff(date_format(SYSDATE(),'%Y-%m-%d'),prd_finsh_tm) as mon_remark,
        <include refid="Base_Column_List" />
        from t_demand_info a
        where date_format(SYSDATE(),'%Y-%m-%d') > a.prd_finsh_tm
        and 30 > pre_cur_period
        and req_sts not in ('30','40','60')
        and datediff(date_format(SYSDATE(),'%Y-%m-%d'),prd_finsh_tm) > (select pro_time from t_production_time where pro_id='6')
        and req_impl_mon = #{0}
        and req_abnor_type not like '%03%'
    </select>
    <select id="getUatUpdateAbnor" resultMap="BaseResultMap">
        select
        datediff(date_format(SYSDATE(),'%Y-%m-%d'),uat_update_tm) as mon_remark,
        <include refid="Base_Column_List" />
        from t_demand_info a
        where date_format(SYSDATE(),'%Y-%m-%d') > a.uat_update_tm
        and  pre_cur_period >= 30
        and  120 > pre_cur_period
        and req_sts not in ('30','40','60')
        and datediff(date_format(SYSDATE(),'%Y-%m-%d'),uat_update_tm) > (select pro_time from t_production_time where pro_id='6')
        and req_impl_mon = #{0}
        and req_abnor_type not like '%04%'
    </select>
    <select id="getTestFnishAbnor" resultMap="BaseResultMap">
        select
        datediff(date_format(SYSDATE(),'%Y-%m-%d'),test_finsh_tm) as mon_remark,
        <include refid="Base_Column_List" />
        from t_demand_info a
        where date_format(SYSDATE(),'%Y-%m-%d') > a.test_finsh_tm
        and  pre_cur_period >= 120
        and  140 > pre_cur_period
        and req_sts not in ('30','40','60')
        and datediff(date_format(SYSDATE(),'%Y-%m-%d'),test_finsh_tm) > (select pro_time from t_production_time where pro_id='6')
        and req_impl_mon = #{0}
        and req_abnor_type not like '%05%'
    </select>
    <update id="updateReqAbnorType" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        UPDATE t_demand_info
        SET
        req_inner_seq = #{reqInnerSeq}
        <if test="reqAbnorType != null and reqAbnorType != ''">
            ,req_abnor_type =#{reqAbnorType}
        </if>
        WHERE req_inner_seq = #{reqInnerSeq}
    </update>
    <select id="getPrdFnishWarn" resultMap="BaseResultMap" parameterType="map">
        select
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        req_prd_line AND
        t.DIC_ID='PRD_LINE') AS req_prd_line,
        (SELECT VALUE
        FROM
        t_permi_dic_data t WHERE t.NAME = req_type AND
        t.DIC_ID='REQ_TASK_TYPE') AS req_type,
        (SELECT VALUE FROM
        t_permi_dic_data t WHERE t.NAME = req_sts AND
        t.DIC_ID='REQ_STS') AS
        req_sts,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        pre_cur_period AND
        t.DIC_ID='REQ_PEROID') AS pre_cur_period,
        (SELECT
        VALUE FROM t_permi_dic_data t WHERE t.NAME = cur_mon_target AND
        t.DIC_ID='REQ_PEROID') AS cur_mon_target,
        (SELECT VALUE FROM
        t_permi_dic_data t WHERE t.NAME = pre_mon_period AND
        t.DIC_ID='REQ_PEROID') AS pre_mon_period,
        <include refid="Base_Column_List" />
        from t_demand_info a where a.prd_finsh_tm=date_format(
        date_add(SYSDATE(), interval 2 day),'%Y-%m-%d');
    </select>
    <select id="getUatUpdateWarn" resultMap="BaseResultMap" parameterType="map">
        select
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        req_prd_line AND
        t.DIC_ID='PRD_LINE') AS req_prd_line,
        (SELECT VALUE
        FROM
        t_permi_dic_data t WHERE t.NAME = req_type AND
        t.DIC_ID='REQ_TASK_TYPE') AS req_type,
        (SELECT VALUE FROM
        t_permi_dic_data t WHERE t.NAME = req_sts AND
        t.DIC_ID='REQ_STS') AS
        req_sts,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        pre_cur_period AND
        t.DIC_ID='REQ_PEROID') AS pre_cur_period,
        (SELECT
        VALUE FROM t_permi_dic_data t WHERE t.NAME = cur_mon_target AND
        t.DIC_ID='REQ_PEROID') AS cur_mon_target,
        (SELECT VALUE FROM
        t_permi_dic_data t WHERE t.NAME = pre_mon_period AND
        t.DIC_ID='REQ_PEROID') AS pre_mon_period,
        <include refid="Base_Column_List" />
        from t_demand_info a where a.uat_update_tm=date_format(
        date_add(SYSDATE(), interval 2 day),'%Y-%m-%d');
    </select>
    <select id="getTestFnishWarn" resultMap="BaseResultMap" parameterType="map">
        select
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        req_prd_line AND
        t.DIC_ID='PRD_LINE') AS req_prd_line,
        (SELECT VALUE
        FROM
        t_permi_dic_data t WHERE t.NAME = req_type AND
        t.DIC_ID='REQ_TASK_TYPE') AS req_type,
        (SELECT VALUE FROM
        t_permi_dic_data t WHERE t.NAME = req_sts AND
        t.DIC_ID='REQ_STS') AS
        req_sts,
        (SELECT VALUE FROM t_permi_dic_data t WHERE t.NAME =
        pre_cur_period AND
        t.DIC_ID='REQ_PEROID') AS pre_cur_period,
        (SELECT
        VALUE FROM t_permi_dic_data t WHERE t.NAME = cur_mon_target AND
        t.DIC_ID='REQ_PEROID') AS cur_mon_target,
        (SELECT VALUE FROM
        t_permi_dic_data t WHERE t.NAME = pre_mon_period AND
        t.DIC_ID='REQ_PEROID') AS pre_mon_period,
        <include refid="Base_Column_List" />
        from t_demand_info a where a.test_finsh_tm=date_format(
        date_add(SYSDATE(), interval 2 day),'%Y-%m-%d');
    </select>

    <update id="WeedAndMonthFeedback" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        UPDATE t_demand_info
        SET
        req_inner_seq = #{reqInnerSeq}
        <if test="preCurPeriod != null and preCurPeriod != ''">
            ,pre_cur_period =#{preCurPeriod}
        </if>
        <if test="riskSolution != null and riskSolution != ''">
            ,risk_solution =#{riskSolution}
        </if>
        <if test="endMonRemark != null and endMonRemark != ''">
            ,end_mon_remark =#{endMonRemark}
        </if>
        <if test="endMonRemark != null and endMonRemark != ''">
            ,end_mon_remark =#{endMonRemark}
        </if>
        <if test="riskFeedbackTm != null and riskFeedbackTm != ''">
            ,risk_feedback_tm =#{riskFeedbackTm}
        </if>
        <if test="endFeedbackTm != null and endFeedbackTm != ''">
            ,end_feedback_tm =#{endFeedbackTm }
        </if>
        <if test="stateCauseClassification != null and stateCauseClassification != ''">
            ,state_cause_classification =#{stateCauseClassification}
        </if>
        <if test="targetCauseClassification != null and targetCauseClassification != ''">
            ,target_cause_classification =#{targetCauseClassification}
        </if>
        <if test="productionTime != null and productionTime != ''">
            ,production_time =#{productionTime}
        </if>
        WHERE req_inner_seq = #{reqInnerSeq}
	</update>

    <update id="updateOperation" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        update t_demand_info
        set
        req_inner_seq =#{reqInnerSeq }
        <if test="reqSts != null and reqSts != ''">
            ,req_sts =#{reqSts }
        </if>
        <if test="preCurPeriod != null and preCurPeriod != ''">
            ,pre_cur_period =#{preCurPeriod }
        </if>
        where req_inner_seq =#{reqInnerSeq }
    </update>

    <select id="findListDeptDemand" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.WorkingHoursDO" >
        SELECT
        <include refid="Base_Column_List" />
        FROM t_demand_info a
        <where>
            req_sts not in ('60')
            AND a.req_impl_mon = #{selectTime,jdbcType=VARCHAR}
            <if test="devpLeadDept != null and devpLeadDept != ''" >
                AND a.devp_lead_dept  = #{devpLeadDept,jdbcType=VARCHAR}
            </if>
        </where>
        ORDER BY a.req_inner_seq desc
    </select>
    <select id="findListDevpCoorDeptDemand" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.WorkingHoursDO" >
        SELECT
        <include refid="Base_Column_List" />
        FROM t_demand_info a
        <where>
            req_sts not in ('60')
            AND a.req_impl_mon = #{selectTime,jdbcType=VARCHAR}
            AND a.devp_coor_dept   like CONCAT('%',#{devpLeadDept,jdbcType=VARCHAR},'%')
        </where>
        ORDER BY a.req_inner_seq desc
    </select>
    <select id="QueryIsExecutingDemand" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_demand_info a
        where	req_sts not in ('10','30','40','60')
        <if test="reqNm != null and reqNm != ''">
            AND   a.req_nm =#{reqNm}
        </if>
        <if test="reqNo != null and reqNo != ''">
            AND   a.req_no = #{reqNo}
        </if>
        <if test="reqImplMon != null and reqImplMon != ''">
            AND a.req_impl_mon =#{reqImplMon}
        </if>
        group by a.req_nm,a.req_no,req_impl_mon
    </select>
    <select id="QueryIsExecutingDemand2" resultMap="BaseResultMap" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_demand_info a
        where	req_sts not in ('60')
        <if test="reqNm != null and reqNm != ''">
            AND   a.req_nm =#{reqNm}
        </if>
        <if test="reqNo != null and reqNo != ''">
            AND   a.req_no = #{reqNo}
        </if>
        <if test="reqImplMon != null and reqImplMon != ''">
            AND a.req_impl_mon =#{reqImplMon}
        </if>
        group by a.req_nm,a.req_no,req_impl_mon
    </select>

    <update id="updatePlanInput" parameterType="com.cmpay.lemon.monitor.entity.DemandDO">
        UPDATE t_demand_info
        <set >
            <if test="reqPrdLine != null and reqPrdLine != ''">
                req_prd_line =#{reqPrdLine },
            </if>
            <if test="reqSts != null and reqSts != ''">
                req_sts =#{reqSts },
            </if>
            <if test="reqNo != null and reqNo != ''">
                req_no =#{reqNo },
            </if>
            <if test="reqNm != null and reqNm != ''">
                req_nm =#{reqNm },
            </if>
            <if test="prdFinshTm != null and prdFinshTm != ''">
                prd_finsh_tm =#{prdFinshTm },
            </if>
            <if test="uatUpdateTm != null and uatUpdateTm != ''">
                uat_update_tm =#{uatUpdateTm },
            </if>
            <if test="testFinshTm != null and testFinshTm != ''">
                test_finsh_tm =#{testFinshTm },
            </if>
            <if test="expPrdReleaseTm != null and expPrdReleaseTm != ''">
                exp_prd_release_tm =#{expPrdReleaseTm },
            </if>
            <if test="curMonTarget != null and curMonTarget != ''">
                cur_mon_target =#{curMonTarget },
            </if>
            <if test="devpLeadDept != null and devpLeadDept != ''">
                devp_lead_dept =#{devpLeadDept },
            </if>
            <if test="devpCoorDept != null and devpCoorDept != ''">
                devp_coor_dept =#{devpCoorDept},
            </if>
            <if test="projectMng != null and projectMng != ''">
                project_mng =#{projectMng },
            </if>
            <if test="devpEng != null and devpEng != ''">
                devp_eng =#{devpEng },
            </if>
            <if test="frontEng != null and frontEng != ''">
                front_eng =#{frontEng },
            </if>
            <if test="testEng != null and testEng != ''">
                test_eng =#{testEng },
            </if>
            <if test="productMng != null and productMng != ''">
                product_mng =#{productMng },
            </if>
            <if test="preCurPeriod != null and preCurPeriod != ''">
                pre_cur_period =#{preCurPeriod },
            </if>
            <if test="stateCauseClassification != null and stateCauseClassification != ''">
                state_cause_classification =#{stateCauseClassification},
            </if>
            <if test="targetCauseClassification != null and targetCauseClassification != ''">
                target_cause_classification =#{targetCauseClassification},
            </if>
            <if test="productionTime != null and productionTime != ''">
                production_time =#{productionTime},
            </if>
        </set >
        where req_inner_seq =#{reqInnerSeq }
    </update>

    <update id="updateSvnBuild" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        update t_demand_info
        set
        req_inner_seq =#{reqInnerSeq }
        <if test="isSvnBuild != null and isSvnBuild != ''">
            ,is_svn_build =#{isSvnBuild }
        </if>
        where req_inner_seq =#{reqInnerSeq }
    </update>

    <update id="updateTest" parameterType="com.cmpay.lemon.monitor.entity.DemandDO" >
        update t_demand_info
        <set>
            <if test="testFinshTm != null and testFinshTm != ''">
                test_finsh_tm =#{testFinshTm },
            </if>
            <if test="testEng != null and testEng != ''">
                test_eng =#{testEng },
            </if>
        </set>
        where req_inner_seq =#{reqInnerSeq }
    </update>

</mapper>
